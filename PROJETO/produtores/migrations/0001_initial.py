# Generated by Django 5.2.3 on 2025-08-08 12:44

import django.db.models.deletion
import produtores.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ProdutorRural',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_fantasia', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome Fantasia')),
                ('razao_social', models.CharField(blank=True, max_length=255, null=True, verbose_name='Razão Social')),
                ('tipo_pessoa', models.CharField(choices=[('PF', 'Pessoa Física'), ('PJ', 'Pessoa Jurídica')], default='PF', max_length=2, verbose_name='Tipo de Pessoa')),
                ('cpf_cnpj', models.CharField(help_text='Informe o CPF (11 dígitos) ou CNPJ (14 dígitos).', max_length=18, unique=True, validators=[produtores.models.validate_cpf_cnpj], verbose_name='CPF/CNPJ')),
                ('rg', models.CharField(blank=True, help_text='Obrigatório para Pessoa Física.', max_length=20, null=True, verbose_name='RG')),
                ('inscricao_estadual', models.CharField(blank=True, max_length=20, null=True, verbose_name='Inscrição Estadual')),
                ('email_contato', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail de Contato')),
                ('telefone_principal', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone Principal')),
                ('telefone_secundario', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone Secundário')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, verbose_name='CEP')),
                ('endereco', models.CharField(blank=True, max_length=255, null=True, verbose_name='Endereço')),
                ('numero', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número')),
                ('complemento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Complemento')),
                ('bairro', models.CharField(blank=True, max_length=100, null=True, verbose_name='Bairro')),
                ('cidade', models.CharField(blank=True, max_length=100, null=True, verbose_name='Cidade')),
                ('estado', models.CharField(blank=True, max_length=2, null=True, verbose_name='Estado')),
                ('renasem', models.CharField(blank=True, help_text='Registro Nacional de Sementes e Mudas.', max_length=50, null=True, verbose_name='RENASEM')),
                ('funrural_recolhimento_tipo', models.CharField(choices=[('folha_pagamento', 'Sobre a Folha de Pagamento'), ('comercializacao_producao', 'Sobre a Comercialização da Produção (2,3%)'), ('nao_se_aplica', 'Não se Aplica')], default='nao_se_aplica', max_length=30, verbose_name='Tipo de Recolhimento FUNRURAL')),
                ('certificado_digital_produtor_arquivo', models.FileField(blank=True, help_text='Certificado digital do produtor (se aplicável).', null=True, upload_to=produtores.models.certificado_digital_upload_path, verbose_name='Certificado Digital (PF ou PJ)')),
                ('certificado_digital_produtor_senha', models.CharField(blank=True, help_text='Senha do arquivo de certificado do produtor.', max_length=255, null=True, verbose_name='Senha do Certificado do Produtor')),
                ('certificado_digital_produtor_validade', models.DateField(blank=True, help_text='Data de expiração do certificado do produtor.', null=True, verbose_name='Validade do Certificado do Produtor')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações Gerais')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
            ],
            options={
                'verbose_name': 'Produtor Rural',
                'verbose_name_plural': 'Produtores Rurais',
                'ordering': ['nome_fantasia', 'razao_social'],
            },
        ),
        migrations.CreateModel(
            name='ResponsavelTecnico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=14, unique=True, validators=[produtores.models.validate_cpf_cnpj], verbose_name='CPF')),
                ('registro_profissional', models.CharField(blank=True, max_length=100, null=True, verbose_name='Registro Profissional (Ex: CREA/CAU)')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone de Contato')),
                ('email', models.EmailField(blank=True, max_length=255, null=True, verbose_name='E-mail de Contato')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações do Responsável Técnico')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('produtor_rural', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsaveis_tecnicos', to='produtores.produtorrural', verbose_name='Produtor Rural')),
            ],
            options={
                'verbose_name': 'Responsável Técnico',
                'verbose_name_plural': 'Responsáveis Técnicos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='CertificadoDigitalResponsavel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_arquivo', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nome do Arquivo (Ex: Certificado RT João)')),
                ('arquivo_pfx', models.FileField(blank=True, help_text='Arquivo de certificado digital do responsável técnico.', null=True, upload_to=produtores.models.certificado_digital_upload_path, verbose_name='Arquivo Certificado (.pfx)')),
                ('senha_pfx', models.CharField(blank=True, help_text='Senha do arquivo .pfx.', max_length=255, null=True, verbose_name='Senha do Certificado')),
                ('data_validade', models.DateField(blank=True, help_text='Data de expiração do certificado.', null=True, verbose_name='Data de Validade')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações do Certificado')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('responsavel_tecnico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificados_digitais', to='produtores.responsaveltecnico', verbose_name='Responsável Técnico')),
            ],
            options={
                'verbose_name': 'Certificado Digital do Responsável',
                'verbose_name_plural': 'Certificados Digitais dos Responsáveis',
                'ordering': ['responsavel_tecnico__nome', 'nome_arquivo'],
            },
        ),
    ]
